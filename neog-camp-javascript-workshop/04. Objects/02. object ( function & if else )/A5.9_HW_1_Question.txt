# A5.9_HW_1

## Exercise 1

Create a citizen object with three properties, `name, age and city`. Assign name as `“Ajay”`, age as `72` and city as `“Indore”`.

1.1 Compare the 'age' property of the citizen object with 60 to check senior citizenship. If age is greater than equal to 60, console a message in the format “{name} is a senior citizen.” If age is less than 60, console a message in the format “{name} is not a senior citizen.”

1.2 Add a property `sugarLevel` to the citizen object. Assign the value `“Normal”` to it. Print the sugar level to console in the format: “Sugar level for {name} is {sugarLevel}.”

1.3 If the age is greater than or equal to 60 and the sugar level is normal, console a message in the format: “{name} is fit to travel”. Otherwise print, “{name} is not fit to travel”.

## Exercise 2

Write a function `releaseMovie` that takes in a `movie` object. The movie object has properties title, duration and isReleased. Assign name as `“MI 7”`, duration as `150` and isReleased as `false`.

2.1 Print the `movie` object to console.

2.2 Create a new object `newMovie` and assign to it the `movie` object itself. Do an equality check if newMovie and movie are the same object or not and print the result to the console.

2.3 Do a check in the newMovie object, if duration of the movie is greater than 120, change the isReleased property to `true`. Print the newMovie object to the console.


## Exercise 3

Write a function that takes two objects movie1 and movie2. 

Both objects have properties `title` and `duration`. movie1 title is “The Lost City” and the duration is 120 mins. movie2 title is “Murder Mystery 2” and the duration is  110 mins.

Compare the duration of movie1 and movie2, and return true if duration of movie1 is more than movie2, otherwise return false. Print the result to the console.

## Exercise 4

Write a function named **`printStudentDetails`** that takes a `student` object as an argument. Student has 3 properties, name, age and marks.  Student’s name is “Priya”, age is 14 and marks is 45.

4.1 Print the student object to the console.

4.2 If marks of the student is less than 60, then add a property `isTopPerformer` to the student object and assign the value `false` to it. Print isTopPerformer property to the console.

4.3 If marks of the student is less than 60 and greater than or equal to 40, then add a property grade to the student object. Assign grade as “D”. Print the entire student object to the console.


